@model IEnumerable<ProjectR.Models.Notebook>

@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #000;
        color: #fff;
        margin: 0;
        padding: 20px;
    }

    h1 {
        text-align: center;
        font-size: 2.5rem;
        text-transform: uppercase;
        margin-bottom: 30px;
        color: #fff;
    }

    form {
        text-align: center;
        margin-bottom: 20px;
    }

    form input[type="text"] {
        width: 300px;
        padding: 10px;
        border: 2px solid #fff;
        background-color: #000;
        color: #fff;
        border-radius: 5px;
        outline: none;
    }

    form input[type="submit"] {
        padding: 10px 20px;
        border: 2px solid #fff;
        background-color: #fff;
        color: #000;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    form input[type="submit"]:hover {
        background-color: #000;
        color: #fff;
    }

    .table {
        width: 100%;
        margin: 20px auto;
        border-collapse: collapse;
        border: 1px solid #fff;
        background-color: #000;
    }

    .table th, .table td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid #fff;
        color: #fff; /* Ensure text is white */
    }

    .table th {
        background-color: #333; /* Solid dark color for header */
        color: #fff; /* Header text in white */
        text-transform: uppercase;
    }

    .table th a {
        color: #fff;
        text-decoration: none;
    }

    .table th a:hover {
        text-decoration: underline;
    }

    .table tbody tr:hover {
        background-color: rgba(255, 255, 255, 0.1);
    }

    .table .active {
        font-weight: bold;
    }

    a {
        color: #fff;
        text-decoration: none;
    }

    a:hover {
        text-decoration: underline;
    }

    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        padding: 0;
        list-style: none;
    }

    .pagination .page-item {
        margin: 0 5px;
    }

    .pagination .page-link {
        display: block;
        padding: 10px 15px;
        border: 2px solid #fff;
        color: #fff;
        background-color: #000;
        text-align: center;
        border-radius: 5px;
        text-decoration: none;
        font-weight: bold;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .pagination .page-item.active .page-link {
        background-color: #fff;
        color: #000;
    }

    .pagination .page-link:hover {
        background-color: #fff;
        color: #000;
    }
</style>

<h1>Index</h1>

<p>
    <form method="get">
        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Search by Name or Company" />
        <input type="submit" value="Search" />
    </form>
</p>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewData["NameSortParm"], searchString = ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Price", "Index", new { sortOrder = ViewData["PriceSortParm"], searchString = ViewData["CurrentFilter"] })
            </th>
            <th>
                Company
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberOfPages)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
                <tr>
                    <td>
                    @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.Company.Name)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.NumberOfPages)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
        }
    </tbody>
</table>

<!-- Странициране -->
<div>
    <ul class="pagination">
        @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
        {
                <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"] })">@i</a>
                </li>
        }
    </ul>
</div>
